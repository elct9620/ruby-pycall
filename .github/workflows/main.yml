name: Build

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}

jobs:
  build-and-push-image:
    name: Ruby ${{ matrix.ruby.version }} with Python ${{ matrix.python.version }} (${{ matrix.variant.name }})
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - name: bookworm
            major: yes
          - name: bullseye
        ruby:
          - version: '3.3.0'
          - version: '3.2.2'
          - version: '3.1.4'
          - version: '3.0.6'
        python:
          - version: '3.12.1'
            gpg: 7169605F62C751356D054A26A821E680E5FA6305
          - version: '3.11.7'
            gpg: A035C8C19219BA821ECEA86B64E628F8D684696D
        exclude:
          - ruby:
              version: '3.0.6'
            variant:
              name: bookworm
              major: yes

    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}
      - name: Build tags from matrix
        id: info
        run: ./scripts/tag.sh
        env:
          RUBY_VERSION: ${{ matrix.ruby.version }}
          PYTHON_VERSION: ${{ matrix.python.version }}
          VARIANT: ${{ matrix.variant.name }}
          MAJOR_VARIANT: ${{ matrix.variant.major }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64
          build-args: |
            VARIANT=${{ matrix.variant.name }}
            RUBY_VERSION=${{ matrix.ruby.version }}
            PYTHON_VERSION=${{ matrix.python.version }}
            PYTHON_GPG_KEY=${{ matrix.python.gpg }}
          tags: ${{ steps.info.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
